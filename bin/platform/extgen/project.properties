# -----------------------------------------------------------------------
# [y] hybris Platform
#
# Copyright (c) 2000-2013 hybris AG
# All rights reserved.
#
# This software is the confidential and proprietary information of hybris
# ("Confidential Information"). You shall not disclose such Confidential
# Information and shall use it only in accordance with the terms of the
# license agreement you entered into with hybris.
#
#
# -----------------------------------------------------------------------


##########################################################################################################
#           Options For the Available Templates
##########################################################################################################

# Comma-separated list of all available extension templates, for example: extgen.template.list=yempty,test
# To allow using a custom extension template:
# 1. Add the name of the extension template to the list.
# 2. Specify the path to the extension template by adding a extgen.template.path.$extensionname property.

extgen.template.list=yempty,yaddon,ycockpit,yacceleratorfulfilmentprocess,ycommercewebservices
modulegen.module.list=accelerator,b2baccelerator

# The extension template that is referenced here is used as default if the user does not specify an extension 
# name at the prompt. Specify an extension name from the extgen.template.list property. 
extgen.template.default=yempty
modulegen.module.default=accelerator

modules.accelerator.root=${HYBRIS_BIN_DIR}/ext-template
modules.accelerator=yacceleratorcore,yacceleratorfacades,yacceleratorstorefront,yacceleratorcockpits,yacceleratorinitialdata,yacceleratortest
modules.b2baccelerator.root=${HYBRIS_BIN_DIR}/ext-template
modules.b2baccelerator=yb2bacceleratorcore,yb2bacceleratorfacades,yb2bacceleratorinitialdata,yb2bacceleratorstorefront,yb2bacceleratortest,yacceleratorcockpits

# The path to the available extension template. Each extension template needs an individual path entry.
# The key must start with "extgen.template.path" followed by a extension name from the extgen.template.list 
# property above. The path to the template can be relative (see "Extension Path Variables" in the hybris dev-net) 
# or absolute (such as "c:\\workspace\\myTemplate" or "d:/newtemplate").
# Examples:
#extgen.template.path.myextension=${platformhome}/extgen/templates/myextension
#extgen.template.path.test=c:\\workspace\\myTemplate
extgen.template.path.yempty=${platformhome}/extgen/templates/yempty
extgen.template.path.yaddon=${HYBRIS_BIN_DIR}/ext-template/yaddon
extgen.template.path.ycockpit=${HYBRIS_BIN_DIR}/ext-template/ycockpit
extgen.template.path.yacceleratorfulfilmentprocess=${HYBRIS_BIN_DIR}/ext-template/yacceleratorfulfilmentprocess
extgen.template.path.ycommercewebservices=${HYBRIS_BIN_DIR}/ext-template/ycommercewebservices

##########################################################################################################
#           Options For the Generated Extension
##########################################################################################################

# The path to where the new extension is to be generated.
# The path can be relative (such as ${HYBRIS_BIN_DIR}/myextensions) or absolute (such as "c:\\workspace\\myTemplate" 
# or "d:/newtemplate"). You do not need to specify the extension's name to create a separate subdirectory, 
# the extension.name property provides for that.
extgen.extension.path=${HYBRIS_BIN_DIR}/custom


# The default name of the new extension if no name is chosen
# Specifies the default name of the new extension. During an extgen run, extgen creates a new subdirectory with 
# the value provided by this property. Using the factory default settings, the new extension will therefore be 
# located in the ${HYBRIS_BIN_DIR}/custom/training directory.
extgen.extension.name=training


# The default Java package for the new extension's classes.
extgen.extension.package=org.training